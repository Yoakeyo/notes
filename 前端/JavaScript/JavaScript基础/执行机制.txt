执行机制
	JavaScript是单线程的
		也就是同一时间只能做一件事
	同步和异步	// HTML5 提出 Web Worker 标准，允许JavaScript创建多个线程
		同步
			前一个任务结束后再执行后一个任务
			程序执行顺序与任务排列顺序是一致的、同步的
			在 主线程 上执行，形成了一个 执行栈
		异步
			同时做多个任务
			通过回调函数实现
			常见的异步任务:
				1.普通事件，如 click 、 resize 等
				2.资源加载，如 load、 error 等
				3.定时器，包括 setInterval、 setTimeout 等
			添加到 任务队列(消息队列) 中
		本质区别在于执行顺序不同
	执行顺序
		1.先执行 执行栈中的同步任务
		2.将异步任务(回调函数)放入任务队列中
		3.当执行栈中的同步任务执行完毕，按着顺序读取任务队列中的异步任务，让被读取的异步任务结束等待，进入执行栈中开始执行
			由于主线程不断重复的获得任务、执行任务，所以这种机制被称为 事件循环(event loop)